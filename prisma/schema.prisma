// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  modemLogs ModemLogs[]
}

model Modem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type  ModemType
  condition ModemCondition @default(SECOND_HAND)
  serial String? @unique
  client Client?
  status ModemStatus @default(AVAILABLE)
  dispatchedTo String?
  dispatchedDate DateTime?
  defectType DefectType?
  remarks String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  logs ModemLogs[]
}

enum DefectType {
  WIFI_PROBLEM
  LOW_SPEED
  SWITCH_PROBLEM
  POWER_ONLY
  NO_POWER
  ANTENNA_BROKEN
  REDLOS_OPTICAL_PROBLEM
  GATEWAY_INACCESSIBLE
}

model Client {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  address String
  pppoeAcc String?
  dispatchImage Photo?
  assignType AssignType @default(INSTALL)
  remarks String?
  assignedDate DateTime? @default(now())
  modemId String @db.ObjectId @unique
  Modem Modem @relation(fields: [modemId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ModemLogs {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  modemId String @db.ObjectId
  message String
  userId String @db.ObjectId
  User  User @relation(fields: [userId], references: [id])
  Modem Modem @relation(fields: [modemId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

enum AssignType {
  INSTALL
  CHANGE_MODEM
  TRANSFER
  RECONN
}

type Photo {
  id              String
  webViewLink     String
  webContentLink  String
}

enum ModemStatus {
  AVAILABLE
  DISPATCHED
  ASSIGNED
  DEFECTIVE
  PENDING_INSPECTION
}

enum ModemCondition {
  BRAND_NEW
  SECOND_HAND
}

enum ModemType {
  IOT
  HUAWEI_5V5
  CHINA_MOBILE
  VSOL
  ZTE
  TOWER
  KING_CRAB
}
